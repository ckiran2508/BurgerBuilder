[{"E:\\ReactJS_Projects\\burger-builder2\\src\\index.js":"1","E:\\ReactJS_Projects\\burger-builder2\\src\\App.js":"2","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\Component1.js":"3","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\Component2.js":"4","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\UI\\container-wrapper.js":"5","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\app-bar.js":"6","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\BurgerBuilder\\BurgerControls\\BurgerControls.js":"7","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\BurgerBuilder\\Burger\\Burger.js":"8","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\BurgerBuilder\\BurgerControls\\ButtonGroup\\ButtonGroup.js":"9","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\BurgerBuilder\\Burger\\BreadIngredient.js":"10","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\BurgerBuilder\\BurgerBuilder.js":"11","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\UI\\modal\\modal.js":"12","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\BurgerBuilder\\IngredientSummary.js":"13","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actionTypes.js":"14","E:\\ReactJS_Projects\\burger-builder2\\src\\axios-orders.js":"15","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\UI\\spinner\\spinner.js":"16","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\HOC\\errorHandler.js":"17","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\cart\\Cart.js":"18","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\orders\\orders.js":"19","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\orders\\order-card\\order-card.js":"20","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\UI\\button-spinner\\button-spinner.js":"21","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\RightMenu\\RightMenu.js":"22","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\User\\User.js":"23","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\About\\About.js":"24","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\User\\user-form\\user-form.js":"25","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\User\\address-form\\address-form.js":"26","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\cart\\cart-item\\cart-item.js":"27","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\User\\login-signup-form\\signup.js":"28","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\User\\login-signup-form\\signin.js":"29","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\rootReducer.js":"30","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\cart.js":"31","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducer.js":"32","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\burger.js":"33","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actions\\prices.js":"34","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actions\\burger.js":"35","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\prices.js":"36","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\ingredients.js":"37","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\error.js":"38","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actions\\ingredients.js":"39","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\store.js":"40","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actions\\cart.js":"41","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actions\\auth.js":"42","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\auth.js":"43","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\test.js":"44","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actions\\user.js":"45","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\user.js":"46"},{"size":280,"mtime":1610287971407,"results":"47","hashOfConfig":"48"},{"size":2862,"mtime":1611460702879,"results":"49","hashOfConfig":"48"},{"size":1829,"mtime":1610647362037,"results":"50","hashOfConfig":"48"},{"size":970,"mtime":1608792267136,"results":"51","hashOfConfig":"48"},{"size":329,"mtime":1608290433555,"results":"52","hashOfConfig":"48"},{"size":1234,"mtime":1611244498829,"results":"53","hashOfConfig":"48"},{"size":992,"mtime":1608374788233,"results":"54","hashOfConfig":"48"},{"size":678,"mtime":1608901853678,"results":"55","hashOfConfig":"48"},{"size":435,"mtime":1608535198755,"results":"56","hashOfConfig":"48"},{"size":1082,"mtime":1608367646102,"results":"57","hashOfConfig":"48"},{"size":5377,"mtime":1611461262739,"results":"58","hashOfConfig":"48"},{"size":1130,"mtime":1609300771209,"results":"59","hashOfConfig":"48"},{"size":4903,"mtime":1611308779787,"results":"60","hashOfConfig":"48"},{"size":2556,"mtime":1611376309322,"results":"61","hashOfConfig":"48"},{"size":192,"mtime":1611466983244,"results":"62","hashOfConfig":"48"},{"size":180,"mtime":1609146466231,"results":"63","hashOfConfig":"48"},{"size":994,"mtime":1608794931358,"results":"64","hashOfConfig":"48"},{"size":7079,"mtime":1611463057473,"results":"65","hashOfConfig":"48"},{"size":3900,"mtime":1611397045639,"results":"66","hashOfConfig":"48"},{"size":691,"mtime":1611390534257,"results":"67","hashOfConfig":"48"},{"size":201,"mtime":1609146289160,"results":"68","hashOfConfig":"48"},{"size":867,"mtime":1611424813860,"results":"69","hashOfConfig":"48"},{"size":5671,"mtime":1611312808828,"results":"70","hashOfConfig":"48"},{"size":1141,"mtime":1611425158981,"results":"71","hashOfConfig":"48"},{"size":5428,"mtime":1611243659275,"results":"72","hashOfConfig":"48"},{"size":7354,"mtime":1611248746725,"results":"73","hashOfConfig":"48"},{"size":937,"mtime":1611420007404,"results":"74","hashOfConfig":"48"},{"size":7672,"mtime":1611463121006,"results":"75","hashOfConfig":"48"},{"size":3009,"mtime":1611460770357,"results":"76","hashOfConfig":"48"},{"size":626,"mtime":1611375074295,"results":"77","hashOfConfig":"48"},{"size":1970,"mtime":1611383070863,"results":"78","hashOfConfig":"48"},{"size":2893,"mtime":1610263856772,"results":"79","hashOfConfig":"48"},{"size":2849,"mtime":1611314191842,"results":"80","hashOfConfig":"48"},{"size":709,"mtime":1611376825923,"results":"81","hashOfConfig":"48"},{"size":816,"mtime":1611312797978,"results":"82","hashOfConfig":"48"},{"size":850,"mtime":1611376229440,"results":"83","hashOfConfig":"48"},{"size":1011,"mtime":1611376335641,"results":"84","hashOfConfig":"48"},{"size":346,"mtime":1610280908280,"results":"85","hashOfConfig":"48"},{"size":747,"mtime":1611376832596,"results":"86","hashOfConfig":"48"},{"size":352,"mtime":1610287959753,"results":"87","hashOfConfig":"48"},{"size":2800,"mtime":1611312802543,"results":"88","hashOfConfig":"48"},{"size":3152,"mtime":1611428586792,"results":"89","hashOfConfig":"48"},{"size":2086,"mtime":1611161285154,"results":"90","hashOfConfig":"48"},{"size":1392,"mtime":1610647647169,"results":"91","hashOfConfig":"48"},{"size":1409,"mtime":1611301841165,"results":"92","hashOfConfig":"48"},{"size":4310,"mtime":1611248372814,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"ef5r49",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"96"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"96"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"96"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"96"},"E:\\ReactJS_Projects\\burger-builder2\\src\\index.js",[],["206","207"],"E:\\ReactJS_Projects\\burger-builder2\\src\\App.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\Component1.js",["208"],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\Component2.js",["209"],"import React,{Component} from 'react'\r\n\r\n\r\nclass Component2 extends Component{\r\n\r\n    constructor(props){\r\n        console.log('Component2 Constructor called')\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('Component2 : Component Did Mount Called')\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log('Component2 : Component Did Update called')\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n            if(this.props.text!= nextProps.text){\r\n                return true\r\n            }\r\n            return false\r\n    }\r\n    \r\n\r\n    componentWillUnmount(){\r\n        console.log('[Component2] Component Will Unmount called')\r\n    }\r\n\r\n     render(){\r\n        console.log('Component2 : Render Called')\r\n         return(\r\n             <React.Fragment>\r\n            <p>{this.props.state.text}</p>\r\n            <p>{this.props.state.number}</p>\r\n             </React.Fragment>\r\n         )\r\n     }\r\n}\r\n\r\nexport default Component2",["210","211"],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\UI\\container-wrapper.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\app-bar.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\BurgerBuilder\\BurgerControls\\BurgerControls.js",["212"],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\BurgerBuilder\\Burger\\Burger.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\BurgerBuilder\\BurgerControls\\ButtonGroup\\ButtonGroup.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\BurgerBuilder\\Burger\\BreadIngredient.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\BurgerBuilder\\BurgerBuilder.js",["213","214","215","216","217"],"import React, { Component } from 'react'\r\nimport ContainerWrapper from '../UI/container-wrapper'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from './BurgerControls/ButtonGroup/ButtonGroup'\r\nimport BurgerIngredient from './Burger/BreadIngredient'\r\nimport './BurgerBuilder.css'\r\nimport TransitionsModal from '../UI/modal/modal'\r\nimport Burger from './Burger/Burger'\r\nimport IngredientSummary from './IngredientSummary'\r\nimport {connect} from 'react-redux'\r\nimport {addIngredient,addtoCart,removeIngredient,getSummary,setQuantity}  from '../../store/actions/burger'\r\nimport {fetchPrices,initPrices} from '../../store/actions/prices'\r\nimport {fetchIngredients} from '../../store/actions/ingredients'\r\nimport {addToCartAsync, updateCartAsync} from '../../store/actions/cart'\r\nimport {v4 as uuid} from 'uuid'\r\nimport Spinner from '../UI/spinner/spinner'\r\n\r\n\r\nconst burgerStyle={width:'50%',height:'270px','overflow-y':'auto'}\r\n\r\nconst MAX_LAYERS=8\r\n\r\nclass BurgerBuilder extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            modalOpen:false\r\n        }\r\n    }\r\n\r\n    showModal=()=>{\r\n        this.setState({modalOpen:!this.state.modalOpen})\r\n    }\r\n\r\n   placeOrderHandler =()=>{\r\n    this.showModal()\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.props.fetchPricesHandler()\r\n        this.props.fetchIngredientsHandler()\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log('Burger Builder Component Will Unmount called')\r\n    }\r\n\r\n\r\n    addToCartHandler=()=>{\r\n        const {loading,serverResponse,...cart} = this.props.cart\r\n        const {error,...burger}=this.props.burger\r\n        burger.id=uuid()\r\n        cart.burgers.push(burger)   \r\n       const cartTotal=function(){\r\n            return Object.keys(cart.burgers).reduce((total,key) => {\r\n                return total+= (cart.burgers[key].totalPrice * cart.burgers[key].quantity)      \r\n              },0)\r\n          }()\r\n        cart.cartTotal=cartTotal\r\n        this.props.updateCart(cart)\r\n        setTimeout(()=>{\r\n             this.setState({modalOpen:false})\r\n        },3000)\r\n    }\r\n\r\n    buttonControls = ()=>{\r\n\r\n        return (\r\n            <React.Fragment>\r\n                 <p>Total Price: <b>Rs.{this.props.burger.totalPrice}</b></p>\r\n                    {\r\n                      this.props.ingredients ? this.props.ingredients.ingredientsArray.map(key => <ButtonGroup onAdd={()=> this.props.addIngredientHandler(key,this.props.prices[key])} onRemove={() => this.props.removeIngredientHandler(key,this.props.prices[key])}  key={key} ingredientName={key} />) : 'Loading...'\r\n                    }\r\n                    <div onClick={this.placeOrderHandler} className='btn2'>Continue</div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n       \r\n        return (\r\n            <ContainerWrapper>\r\n                <TransitionsModal open={this.state.modalOpen} onClose={() => {this.setState({modalOpen:false})}}>\r\n                {this.props.burger.ingredients.length>=1 ?  <IngredientSummary burger={this.props.burger} prices={this.props.prices} getSummaryHandler={() => this.props.getSummaryHandler()} setQuantityHandler={(quantity)=> this.props.setQuantityHandler(quantity)} loading={this.props.loading} addToCart={this.addToCartHandler} serverResponse={this.props.serverResponse} isAuthenticated={this.props.isAuthenticated} onBackClick={this.showModal}/> : <h4>&nbsp;&nbsp;Your Order is Empty. Please build you burger&nbsp;&nbsp;</h4> }\r\n                </TransitionsModal>       \r\n                <ContainerWrapper style={{background:'#fff2e6',width:'100%'}}>        \r\n                <Burger ingredients={this.props.burger.ingredients} style={burgerStyle}/>\r\n                </ContainerWrapper>\r\n                <ContainerWrapper style={{ 'box-shadow': '0 0 5px gray', width: 'max-content', 'text-align': 'center' }}>\r\n                   {this.props.prices.loading ? <Spinner/> : this.buttonControls()}\r\n                </ContainerWrapper>\r\n            </ContainerWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStatetoProps= function(state){\r\n      \r\n    return{\r\n        ingredients:state.ingredients,\r\n        prices:state.prices,\r\n        burger:state.burger,\r\n        serverResponse:state.cart.serverResponse,\r\n        loading:state.cart.loading,\r\n        isAuthenticated:state.auth.isAuthenticated,\r\n        cart:state.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= function(dispatch){\r\n    return{\r\n        addIngredientHandler: (ingredientName,price)=>{\r\n            dispatch(addIngredient(ingredientName,price))\r\n        },\r\n        removeIngredientHandler:(ingredientName,price)=>{\r\n            dispatch(removeIngredient(ingredientName,price))\r\n        },\r\n        placeOrderHandler: (ingredientName)=>{\r\n            dispatch(addtoCart(ingredientName))\r\n        },\r\n        fetchPricesHandler: ()=>{\r\n            dispatch(fetchPrices())\r\n        },\r\n        fetchIngredientsHandler: ()=>{\r\n            dispatch(fetchIngredients())\r\n        },\r\n        getSummaryHandler: ()=>{\r\n            dispatch(getSummary())\r\n        },\r\n        setQuantityHandler: (quantity)=>{\r\n            dispatch(setQuantity(quantity))\r\n        },\r\n        updateCart:(cart)=>{\r\n            dispatch(updateCartAsync(cart))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps,mapDispatchToProps)(BurgerBuilder)\r\n\r\n","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\UI\\modal\\modal.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\BurgerBuilder\\IngredientSummary.js",["218","219","220","221","222","223","224","225"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button'\r\nimport ButtonSpinner from '../UI/button-spinner/button-spinner'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {connect} from 'react-redux'\r\nimport {updateCartAsync} from '../../store/actions/cart'\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n});\r\n\r\nconst IngredientsSummary=function(props) {\r\n  const classes = useStyles();\r\n\r\n  const [disable,setDisable] = React.useState(false)\r\n  const [showSpinner,setShowSpinner] = React.useState(false)\r\n  const [status,setStatus] = React.useState({type:'',message:'',fromServer:false})\r\n  const [quantity,setQuantity] = React.useState(1)\r\n  const [showAlert,setShowAlert] = React.useState(false)\r\n\r\n\r\n  useEffect(()=>{props.getSummaryHandler()},[])\r\n\r\n  const addToCartHandler = function(){\r\n      props.addToCart()\r\n      setShowAlert(true)\r\n      setTimeout(()=>setShowAlert(false),10000)\r\n  }\r\n\r\n  const contents = function(){\r\n    return(\r\n      <React.Fragment>\r\n      <Table className={classes.table} >\r\n      <TableHead>\r\n        <TableRow >\r\n          <TableCell align=\"center\"><b>Ingredient</b></TableCell>\r\n          <TableCell align=\"center\"><b>Quantity</b></TableCell>\r\n          <TableCell align=\"center\"><b>Unit Price</b></TableCell>\r\n          <TableCell align=\"center\"><b>Total</b></TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>       \r\n              {\r\n                 Object.keys(props.burger.ingredientsSummary).map(key =>\r\n                     <TableRow key={key} className={classes.tableRow}>\r\n                         <TableCell style={{'text-transform': 'capitalize'}} align=\"center\">{key}</TableCell>\r\n                         <TableCell align=\"center\">{props.burger.ingredientsSummary[key]}</TableCell>\r\n                         <TableCell align=\"center\">{props.prices[key]}</TableCell>\r\n                         <TableCell align=\"center\">{props.burger.ingredientsSummary[key] * props.prices[key]}</TableCell>\r\n                     </TableRow>\r\n                 )\r\n              }\r\n      <TableRow >\r\n      <TableCell align=\"center\">Base</TableCell>\r\n      <TableCell align=\"center\">1</TableCell>\r\n      <TableCell align=\"center\">4</TableCell>\r\n      <TableCell align=\"center\">4</TableCell>\r\n      </TableRow>\r\n      <TableRow >\r\n      <TableCell align=\"center\"></TableCell>\r\n      <TableCell align=\"center\"></TableCell>\r\n      <TableCell align=\"center\"><b>Total</b></TableCell>\r\n      <TableCell align=\"center\"><b>Rs.&nbsp;{props.burger.totalPrice}</b></TableCell>\r\n      </TableRow>\r\n      <TableRow >\r\n      <TableCell align=\"center\"></TableCell>\r\n      <TableCell align=\"center\"></TableCell>\r\n      <TableCell align=\"center\">Qty</TableCell>\r\n      <TableCell align=\"center\">x&nbsp;<input style={{marginLeft:'20px'}} type=\"number\" name=\"quantity\" placeholder='Qty' value={props.burger.quantity} onChange={(event)=>{props.setQuantityHandler(event.target.value)}} min=\"1\" max=\"10\"/></TableCell>\r\n      </TableRow>  \r\n      <TableRow >\r\n      <TableCell align=\"center\"></TableCell>\r\n      <TableCell align=\"center\"></TableCell>\r\n      <TableCell align=\"center\"><b>Total Price</b></TableCell>\r\n      <TableCell align=\"center\"><b>Rs.&nbsp;{props.burger.quantity * props.burger.totalPrice}</b></TableCell>\r\n      </TableRow>  \r\n      </TableBody>\r\n    </Table>\r\n    <br/>\r\n    <Button variant=\"contained\"  size='small' color='secondary' onClick={props.onBackClick}>Back</Button>\r\n    <Button style={{marginLeft:'20px'}} variant=\"contained\" size='small' color='primary'  disabled={props.loading && disable} onClick={addToCartHandler}>{props.loading ? <ButtonSpinner/> : 'Add To Cart'}</Button> \r\n    { showAlert ? props.serverResponse && (props.serverResponse.includes('failed')  ?  <Alert style={{'margin-top':'10px','padding':'1px'}} severity={'error'}>Something went wrong. Please try Later...</Alert> : <Alert style={{'margin-top':'10px','padding':'1px'}} severity={'info'}>Added to Cart</Alert>) : ''}\r\n    </React.Fragment>\r\n    )\r\n  }\r\n\r\n  return (\r\n      <React.Fragment>\r\n       {props.isAuthenticated ? contents() : <h4>You are not Signed In . Please SignIn (demo creds email:test@test.com , password:test123)</h4>}     \r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = function(state){\r\n\r\n  return{\r\n    cart:state.cart\r\n  }\r\n}\r\n const mapDispatchToProps = function(dispatch){\r\n\r\n  return {\r\n    updateCart : (cart) => {dispatch(updateCartAsync(cart))}\r\n  }\r\n }\r\n\r\n export default connect(mapStateToProps,mapDispatchToProps)(IngredientsSummary)\r\n\r\n","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actionTypes.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\axios-orders.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\UI\\spinner\\spinner.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\HOC\\errorHandler.js",[],["226","227"],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\cart\\Cart.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\orders\\orders.js",["228","229"],"import React from 'react'\r\nimport OrderCard from './order-card/order-card'\r\nimport './orders.css'\r\nimport Spinner from '../UI/spinner/spinner'\r\nimport {connect} from 'react-redux'\r\nimport { render } from '@testing-library/react'\r\nimport axiosInstance from '../../axios-orders'\r\nimport TransitionModal from '../UI/modal/modal'\r\nimport Burger from '../BurgerBuilder/Burger/Burger'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nclass Orders extends React.Component{\r\n  \r\n    state={\r\n        showSpinner: false,\r\n        orders:[],\r\n        errormessage:null,\r\n        showModal:false,\r\n        selectedOrder:{}\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n      this.setState({showSpinner:true})\r\n       axiosInstance.get('/orders/'+this.props.userid)\r\n       .then(response => this.setState({showSpinner:false,orders:response.data}))\r\n       .catch(error => this.setState({showSpinner:false,errormessage:'Failed to Get Orders'}))\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      console.log('Orders Component Will Unmount called')\r\n  }\r\n\r\n  deleteHandler=(orderid)=>{\r\n    this.setState({showSpinner:true})\r\n    axiosInstance.delete('/orders/'+orderid)\r\n    .then(response => {axiosInstance.get('/orders/'+this.props.userid)\r\n                      .then(response => this.setState({showSpinner:false,orders:response.data}))\r\n                      .catch(error => this.setState({showSpinner:false,errormessage:'Failed to Delete Orders'}))})\r\n                      .catch(error => this.setState({showSpinner:false,errormessage:'Failed to Get Orders'}))\r\n  }\r\n\r\n  viewOrderHandler = (orderid)=>{\r\n    const selectedOrder = this.state.orders.find(order => order.id === orderid)\r\n    this.setState({showModal:true,selectedOrder:selectedOrder})\r\n  }\r\n\r\n    render(){\r\n    return(\r\n        <div className='orders'>\r\n          <p style={{textAlign:'center',border:'1px solid lightgray',borderRadius:'3px'}}><b>Orders</b></p>\r\n           {this.props.isAuthenticated ? this.state.showSpinner? <Spinner/> : this.state.orders? this.state.orders.map(order => <OrderCard key={order.id} order={order} viewOrderHandler={this.viewOrderHandler} deleteHandler={this.deleteHandler} />): <p style={{margin:'auto'}}>No Orders Found</p> : <p>You are not Signed In . Please SignIn (demo creds email:test@test.com , password:test123)</p>}\r\n           <p>{this.state.errormessage}</p>\r\n          <TransitionModal open={this.state.showModal} onClose={() => {this.setState({showModal:false})}}>\r\n            <ViewOrder {...this.state.selectedOrder}/>\r\n          </TransitionModal>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = function(state){\r\n\r\n  return{\r\n    isAuthenticated:state.auth.isAuthenticated,\r\n    userid:state.user.id\r\n  }\r\n    \r\n}\r\n\r\nexport default connect(mapStatetoProps,null)(Orders)\r\n\r\n\r\n\r\nconst ingredients=['salad','bacon','cheese','meat']\r\n\r\nconst burgerStyle={margin:'3px',marginLeft:'10px',width:'100px',height:'75px','overflow-y':'auto'}\r\n\r\nconst ViewOrder = function(props){\r\n\r\n  \r\n  return(\r\n      <div className='view-order'>\r\n        <b style={{margin:'auto'}}>Order Details</b>\r\n         <div className='burgers-wrapper'>\r\n       { props.burgers.map(burger => <div className='burger-box'>\r\n         <Burger ingredients={ingredients}  style={burgerStyle}/>\r\n         <p style={{textAlign:'center'}}>Price: Rs.{burger.quantity*burger.totalPrice}</p>\r\n         </div>)}\r\n         </div>\r\n         \r\n     <table height='200' width='400'>\r\n       <tbody>\r\n         <tr>\r\n           <td>Address:</td>\r\n           <td>{Object.keys(props.address).map(line => <p style={{margin:'0'}}>{props.address[line]}</p>)}</td>\r\n         </tr>\r\n         <tr>\r\n           <td>DeliveryMethod:</td>\r\n           <td>{props.deliveryMethod}</td>\r\n         </tr>\r\n         <tr>\r\n           <td>OrderTotal:</td>\r\n           <td><b>Rs.{props.orderTotal}</b></td>\r\n         </tr>\r\n       </tbody>\r\n     </table>\r\n      </div>\r\n  )\r\n\r\n\r\n}","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\orders\\order-card\\order-card.js",["230"],"import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './order-card.css'\r\n\r\nconst OrderCard = function(props){\r\n\r\n\r\n    return(\r\n        <div className='order-card'>\r\n          <p onClick={()=>{props.viewOrderHandler(props.order.id)}}><b>Order Id:</b> {props.order.id}</p>\r\n          <p><b>Date:</b> {props.order.orderDate}</p>\r\n          <p><b>Order Total</b> : Rs.{props.order.orderTotal}</p>\r\n          <div style={{display:'flex',margin:'auto'}}>\r\n          <div className='btn2' style={{margin:'auto',padding:'0 3px 0 3px'}}  onClick={() => props.deleteHandler(props.order.id)}>Delete</div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderCard","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\UI\\button-spinner\\button-spinner.js",[],["231","232"],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\RightMenu\\RightMenu.js",["233"],"import ContainerWrapper from '../UI/container-wrapper'\r\nimport Button from '@material-ui/core/Button'\r\nimport {Link} from 'react-router-dom'\r\nimport './right-menu.css'\r\n\r\nconst RightMenu= function(props){\r\n\r\n   const onClickHandler= function(){\r\n    props.signOut()\r\n    props.openModal2(true)\r\n    }\r\n    return(\r\n        <ContainerWrapper style={{'box-shadow':'10px 10px 5px #aaaaaa',display:'flex',flexDirection:'column',margin:'40px 30px 0 20px',background:'#ffebcc',width:'15%',height:'max-content'}}>\r\n        <Link to='/Cart' className='link2' >Cart</Link>\r\n        <Link to='/Orders' className='link2' >Orders</Link>\r\n        {props.isAuthenticated ? <div className='btn2'  onClick={onClickHandler}>Sign Out</div> : <div  className='btn2' onClick={()=> {props.openModal(true)}}>Sign In</div>}\r\n        </ContainerWrapper>\r\n    )\r\n}\r\n\r\nexport default RightMenu","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\User\\User.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\About\\About.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\User\\user-form\\user-form.js",["234","235","236","237"],"import React, { useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport {connect} from 'react-redux'\r\nimport {updateUserAsync} from '../../../store/actions/user'\r\n\r\n\r\nconst UserForm = function(props){\r\n\r\n    const formData ={\r\n        firstName :{\r\n            type:'string',\r\n            required:true,\r\n            isValid:true\r\n        },\r\n        lastName :{\r\n            type:'string',\r\n            required:true,\r\n            isValid:true\r\n        },\r\n        phone :{\r\n            type:'number',\r\n            required:true,\r\n            length1:10,\r\n            isValid:true\r\n        },\r\n        email :{\r\n            type:'email',\r\n            required:true,\r\n            isValid:true\r\n        },\r\n       \r\n    }\r\n\r\n    \r\n    const firstRenderFirstName= React.useRef(true) \r\n    const firstRenderLastName= React.useRef(true)\r\n    const firstRenderPhone= React.useRef(true)\r\n    const firstRenderEmail= React.useRef(true)   \r\n    const [firstName,setFirstName] = React.useState(props.user.firstName ? props.user.firstName : '' )\r\n    const [lastName,setLastName] = React.useState(props.user.lastName ? props.user.lastName : '')\r\n    const [phone,setPhone] = React.useState(props.user.phone ? props.user.phone : '')\r\n    const [email,setEmail] = React.useState(props.user.email ? props.user.email : '')\r\n    const [firstNameValid,setFirstNameValid] = React.useState(true)\r\n    const [lastNameValid,setLastNameValid] = React.useState(true)\r\n    const [phoneValid,setPhoneValid] = React.useState(true)\r\n    const [emailValid, setEmailValid] = React.useState(true)\r\n    const [error,setError] = React.useState('')\r\n\r\n    useEffect(()=>{\r\n        if(firstRenderFirstName.current){\r\n            firstRenderFirstName.current=false\r\n            return\r\n        }\r\n        formData.firstName.isValid =  formData.firstName.required && !(firstName==='') && (formData.firstName.type==='string' && !(/\\d/.test(firstName)))  && formData.firstName.isValid     \r\n        setFirstNameValid(formData.firstName.isValid)\r\n    },[firstName])\r\n\r\n    useEffect(()=>{\r\n        if(firstRenderLastName.current){\r\n            firstRenderLastName.current=false\r\n            return\r\n        }\r\n        formData.lastName.isValid =  formData.lastName.required && !(lastName==='') && (formData.lastName.type==='string' && !(/\\d/.test(lastName))) && formData.lastName.isValid      \r\n        setLastNameValid(formData.lastName.isValid) \r\n    },[lastName])\r\n\r\n    useEffect(()=>{\r\n        if(firstRenderPhone.current){\r\n            firstRenderPhone.current=false\r\n            return\r\n        }\r\n        formData.phone.isValid =  formData.phone.required && !(phone==='') && (formData.phone.type==='number' && (/[^a-z]/i.test(phone))) && (phone.length === formData.phone.length1) && formData.phone.isValid  \r\n        setPhoneValid(formData.phone.isValid)\r\n    },[phone])\r\n\r\n    useEffect(()=>{\r\n        if(firstRenderEmail.current){\r\n            firstRenderEmail.current=false\r\n            return\r\n        }\r\n        formData.email.isValid =  formData.email.required && !(email==='') && (formData.email.type==='email' && email.includes('@') && email.includes('.com')  ) && formData.email.isValid      \r\n        setEmailValid(formData.email.isValid)\r\n    },[email])\r\n\r\n\r\n    const handleClick= function(){\r\n        if(firstNameValid && lastNameValid && phoneValid && emailValid){\r\n            const user={\r\n                id:props.user.id,\r\n                firstName:firstName,\r\n                lastName:lastName,\r\n                email:email,\r\n                phone:phone,\r\n                addresses:[...props.user.addresses]\r\n            }\r\n            props.handleUpdate(user)\r\n            props.closeModal()\r\n        }else{\r\n             setError('Form Invalid. Please Check the inputs')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='user-form'>\r\n            <h3 style={{textAlign:'center'}}>{props.formHeading}</h3>\r\n            <input type='text' className={firstNameValid? 'neutral-input':'wrong-input'} placeholder='First Name*' value={firstName} onChange={(event)=> setFirstName(event.target.value.trim())}/>\r\n            <input type='text' className={lastNameValid? 'neutral-input':'wrong-input'} placeholder='Last Name*' value={lastName} onChange={(event => setLastName(event.target.value.trim()))}/>\r\n            <input type='text' className={phoneValid? 'neutral-input':'wrong-input'} placeholder='Phone*' value={phone} onChange={(event => setPhone(event.target.value.trim()))}/>\r\n            <input type='text' className={emailValid? 'neutral-input':'wrong-input'} disabled={true} placeholder='Email*' value={email} onChange={(event => setEmail(event.target.value.trim()))}/>\r\n            <br/>\r\n        <span style={{margin:'auto'}}>\r\n        <Button onClick={props.closeModal} style={{width:'max-content',margin:'5px'}} variant=\"contained\" color='secondary'>Cancel</Button>\r\n        <Button  style={{width:'max-content',margin:'5px'}} variant=\"contained\" color='primary' onClick={handleClick}>Save</Button>\r\n        </span>\r\n        <p style={{color:'red'}}>{error}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps= function(state){\r\n\r\n    return{\r\n        user:state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = function(dispatch){\r\n\r\n    return{\r\n      handleUpdate : (user)=> {dispatch(updateUserAsync(user))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UserForm)\r\n\r\n\r\n","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\User\\address-form\\address-form.js",["238","239","240","241","242"],"import React, { useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport {updateUserAsync} from '../../../store/actions/user'\r\nimport {connect} from 'react-redux'\r\n\r\nconst AddressForm = function(props){\r\n\r\n    const rules = {\r\n        addressName:{\r\n            type:'string',\r\n            required:true,\r\n            length1:15\r\n        },\r\n        line1:{\r\n            type:'string',\r\n            required:true,\r\n            length1:25,\r\n        },\r\n        line2:{\r\n            type:'string',\r\n            required:true,\r\n            length1:25,\r\n        },\r\n        line3:{\r\n            type:'string',\r\n            required:true,\r\n            length1:25\r\n        },\r\n        zipCode:{\r\n            type:'number',\r\n            required:true,\r\n            length:7\r\n        }\r\n    }\r\n\r\n    const firstRenderAddressName= React.useRef(true)\r\n    const firstRenderLine1 = React.useRef(true)\r\n    const firstRenderLine2 = React.useRef(true)\r\n    const firstRenderLine3 = React.useRef(true)\r\n    const firstRenderZipCode = React.useRef(true)\r\n    const [error,setError] = React.useState({})\r\n    const [formStatus,setFormStatus]=React.useState('')\r\n    const [addressName,setAddressName] = React.useState(props.address.name ? props.address.name : '');\r\n    const [line1,setLine1] = React.useState(props.address.line1 ? props.address.line1 : '')\r\n    const [line2,setLine2] = React.useState(props.address.line2 ? props.address.line2 : '')\r\n    const [line3,setLine3] = React.useState(props.address.line3 ? props.address.line3 : '')\r\n    const [zipCode,setZipCode] = React.useState(props.address.zipCode ? props.address.zipCode : '')\r\n\r\n\r\n      useEffect(()=>{       \r\n        if(firstRenderAddressName.current){\r\n            firstRenderAddressName.current=false\r\n            return\r\n        }\r\n        if((rules.addressName.required && addressName === '')) setError({...error,addressName:'[AddressName required]'})\r\n        else if(rules.addressName.length1 <= addressName.length)  setError({...error,addressName:'[Address Name is exceeding characters limit]'})\r\n        else setError({...error,addressName:undefined})\r\n      },[addressName])\r\n      \r\n      useEffect(()=>{       \r\n        if(firstRenderLine1.current){\r\n            firstRenderLine1.current=false\r\n            return\r\n        }\r\n        if((rules.line1.required && line1 === '')) setError({...error,line1:'[Line1 required]'})\r\n        else if(rules.line1.length1 <= line1.length) setError({...error,line1:'[Line1 is exceeding characters limit]'})\r\n        else setError({...error,line1:undefined})\r\n      },[line1]) \r\n\r\n      useEffect(()=>{    \r\n        if(firstRenderLine2.current){\r\n            firstRenderLine2.current=false\r\n            return\r\n        }   \r\n        if((rules.line2.required && line2 === '')) setError({...error,line2:'[Line2 required]'})\r\n        else if(rules.line2.length1 <= line2.length) setError({...error,line2:'[Line2 is exceeding characters limit]'})\r\n        else setError({...error,line2:undefined})\r\n      },[line2]) \r\n\r\n      useEffect(()=>{     \r\n          if(firstRenderLine3.current){\r\n              firstRenderLine3.current=false\r\n              return\r\n          }  \r\n        if((rules.line3.required && line3 === '')) setError({...error,line3:'[Line3 required]'})\r\n        else if(rules.line3.length1 <= line3.length) setError({...error,line3:'[Line3 is exceeding characters limit]'})\r\n        else setError({...error,line3:undefined})\r\n      },[line3]) \r\n\r\n      useEffect(()=>{    \r\n        if(firstRenderZipCode.current){\r\n            firstRenderZipCode.current=false\r\n            return\r\n        }   \r\n        if((rules.zipCode.required && zipCode === '')) setError({...error,zipCode:'[ZipCode required]'})\r\n        else if((rules.zipCode.length <= zipCode.length)) setError({...error,zipCode:'[ ZipCode and should not exceed 7 characters]'})\r\n        else if((rules.zipCode.type=== 'number' && !(/[^a-z]/i.test(zipCode)))) setError({...error,zipCode:'[Zipcode should contain only number]'})\r\n        else setError({...error,zipCode:undefined})\r\n      },[zipCode]) \r\n\r\n      const handleSave= function(){\r\n          for(let key in error){\r\n              if(error[key]!==undefined) {\r\n                   setFormStatus('Cannot Save. Invalid Form Inputs')\r\n                   return\r\n              }\r\n          }\r\n          const {loading,userServerResponse,...user} = props.user\r\n          if(props.addAddress){\r\n               const newAddress={\r\n                   name:addressName,\r\n                   line1:line1,\r\n                   line2:line2,\r\n                   line3:line3,\r\n                   zipCode:zipCode\r\n               }\r\n               user.addresses.push(newAddress)\r\n          }else{\r\n              const address = user.addresses.find(a => a.name === props.address.name)\r\n              address.name=addressName\r\n              address.line1=line1\r\n              address.line2=line2\r\n              address.line3=line3\r\n              address.zipCode=zipCode\r\n          }\r\n          \r\n          props.updateUser(user)\r\n          props.closeModal()\r\n\r\n      }\r\n\r\n    return(\r\n        <div className='address-form'>     \r\n            <h3 style={{textAlign:'center'}}>{props.formHeading}</h3>\r\n            <input type='text' className= {error.addressName ? 'wrong-input':'neutral-input'} placeholder='Address Name*' value={addressName} onChange={(event) => setAddressName(event.target.value)}/>\r\n            <p style={{fontSize:'10px',color:'coral', margin:'0 45px'}}>{error.addressName}</p>\r\n            <input type='text' className= {error.line1 ? 'wrong-input':'neutral-input'} placeholder='Line1' value={line1} onChange={(event) => setLine1(event.target.value)}/>\r\n            <p style={{fontSize:'10px',color:'coral',margin:'0 45px'}}>{error.line1}</p>\r\n            <input type='text' className={error.line2 ? 'wrong-input':'neutral-input'} placeholder='Line2' value={line2} onChange={(event) => setLine2(event.target.value)}/>\r\n            <p style={{fontSize:'10px',color:'coral',margin:'0 45px'}}>{error.line2}</p>\r\n            <input type='text' className={error.line3 ? 'wrong-input':'neutral-input'}placeholder='Line3' value={line3} onChange={(event) => setLine3(event.target.value)}/> \r\n           <p style={{fontSize:'10px',color:'coral',margin:'0 45px'}}>{error.line3}</p> \r\n            <input type='text' className={error.zipCode ? 'wrong-input':'neutral-input'} placeholder='ZipCode' value={zipCode} onChange={(event) => setZipCode(event.target.value)}/> \r\n           <p style={{fontSize:'10px',color:'coral',margin:'0 45px'}}>{error.zipCode}</p>\r\n            <br/>\r\n        <br/>\r\n        <span style={{margin:'auto'}}> \r\n        <Button onClick={props.closeModal} style={{width:'max-content',margin:'5px'}} variant=\"contained\" color='secondary'>Cancel</Button>\r\n        <Button style={{width:'max-content',margin:'5px'}} variant=\"contained\" color='primary' onClick={handleSave}>Save</Button>\r\n        </span>\r\n        <p style={{color:'coral'}}>{formStatus}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = function(state){\r\n\r\n    return {\r\n        user:state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = function(dispatch){\r\n\r\n    return{\r\n        updateUser:(user)=> {dispatch(updateUserAsync(user))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddressForm)","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\cart\\cart-item\\cart-item.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\User\\login-signup-form\\signup.js",["243","244","245","246","247","248","249"],"import React,{useEffect} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../../store/actions/auth'\r\nimport Spinner from '../../UI/spinner/spinner'\r\n\r\n\r\n\r\n\r\n  const SignUp = function(props) {\r\n\r\n\r\n  const firstRenderFirstName = React.useRef(true)\r\n  const firstRenderLastName = React.useRef(true)\r\n  const firstRenderEmail= React.useRef(true)\r\n  const firstRenderPhone = React.useRef(true)\r\n  const firstRenderPassword1 = React.useRef(true)\r\n  const firstRenderPassword2 = React.useRef(true)\r\n  const [firstName,setFirstName] = React.useState('')\r\n  const [lastName,setLastName] = React.useState('')\r\n  const [email,setEmail] = React.useState('')\r\n  const [phone,setPhone] = React.useState('')\r\n  const [password1,setPassword1]  = React.useState('')\r\n  const [password2,setPassword2]  = React.useState('')\r\n  const [error,setError] = React.useState({})\r\n  const [formValidationMessage,setFormValidationMessage] = React.useState('')\r\n\r\n  const rules ={\r\n     firstName:{\r\n       type:'string',\r\n       required:true\r\n     },\r\n     lastName:{\r\n       type:'string',\r\n       required:true\r\n     },\r\n     email:{\r\n       type:'email',\r\n       required:true\r\n     },\r\n     phone:{\r\n       type:'number',\r\n       required:false,\r\n       length1:10\r\n     },\r\n     password1:{\r\n          type:'string',\r\n          required:true,\r\n          minLength:4\r\n     },\r\n     password2:{\r\n      type:'string',\r\n      required:true\r\n     }\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n    if(firstRenderFirstName.current){\r\n      firstRenderFirstName.current=false\r\n      return\r\n    }\r\n    \r\n    if(rules.firstName.required === true && rules.firstName.type==='string' && firstName === ''){\r\n      setError({...error,firstName : 'First Name Required' })  \r\n    }\r\n    else if((/\\d/.test(firstName))){\r\n      setError({...error,firstName : 'Invalid FirstName' })  \r\n    }\r\n    else{\r\n      setError({...error,firstName : null }) \r\n    }\r\n  },\r\n  [firstName])\r\n\r\n  useEffect(()=>{\r\n    if(firstRenderLastName.current){\r\n      firstRenderLastName.current=false\r\n      return\r\n    }\r\n    if(rules.lastName.required === true && rules.lastName.type==='string' && lastName === ''){\r\n     setError({...error,lastName:'Last Name Required'})  \r\n    }\r\n    else if((/\\d/.test(lastName))){\r\n      setError({...error,lastName : 'Invalid LastName' })  \r\n    }\r\n    else setError({...error,lastName:null}) \r\n  },\r\n  [lastName])\r\n\r\n  useEffect(()=>{\r\n    if(firstRenderEmail.current){\r\n      firstRenderEmail.current=false\r\n      return\r\n    }\r\n    if(rules.email.required === true && rules.email.type==='email' && email === ''){\r\n      setError({...error,email:'Email Required'})  \r\n    }\r\n    else if(!email.includes('@') || !email.includes('.com')){\r\n      setError({...error,email:'Invalid Email'})\r\n    }\r\n    else setError({...error,email:null})\r\n  },\r\n  [email])\r\n\r\n  useEffect(()=>{\r\n    if(firstRenderPhone.current){\r\n      firstRenderPhone.current=false\r\n      return\r\n    }\r\n    if(rules.phone.required === true && rules.phone.type==='number' && phone === ''){\r\n      setError({...error,phone:'Phone Required'})  \r\n    }\r\n    else if(phone.length != rules.phone.length1 && (/[^a-z]/i.test(phone))){\r\n     setError({...error,phone:'Phone number invalid'})\r\n    }else{\r\n      setError({...error,phone:null})\r\n    }\r\n  },\r\n  [phone])\r\n\r\n  useEffect(()=>{\r\n    if(firstRenderPassword1.current){\r\n      firstRenderPassword1.current=false\r\n      return\r\n    }\r\n    if(rules.password1.minLength > password1.length){\r\n      setError({...error,password1 : 'Password must atleast 4 characters'})\r\n    }\r\n    else setError({...error,password1 :null})\r\n  },\r\n  [password1])\r\n\r\n  useEffect(()=>{\r\n    if(firstRenderPassword2.current){\r\n      firstRenderPassword2.current=false\r\n      return\r\n    }\r\n     if(password1 !== password2){\r\n    setError({...error,password2:'Passwords do not match'})\r\n    }\r\n    else setError({...error,password2:null})\r\n  },\r\n  [password2])\r\n\r\n\r\n  const handleSubmit= function(event){\r\n\r\n    event.preventDefault()\r\n  \r\n    if(Object.keys(error).length === 0){\r\n      setFormValidationMessage('Form Empty')\r\n      return\r\n    }\r\n    for(let key in error){\r\n      if(error[key]!== null){\r\n        setFormValidationMessage('Invalid inputs')\r\n        return\r\n      }\r\n    }\r\n    setFormValidationMessage('Success')\r\n    const userData ={\r\n      firstName:firstName,\r\n      lastName:lastName,\r\n      email:email,\r\n      phone:phone,\r\n      password:password1,\r\n      addresses:[]\r\n    }\r\n     props.signUp(userData)\r\n  }\r\n\r\n\r\n  return (\r\n      <div style={{width:'200px',borderRadius:'3px', padding:'10px',margin:'0 60px'}}>\r\n      <div style={{margin:'0px auto', width:'max-content'}}>\r\n      <h2 style={{textAlign:'center'}}>SignUp</h2>\r\n      <form onSubmit={handleSubmit}>\r\n      <input className='neutral-input' style={{background:'inherit'}} type='text' placeholder='First Name' value={firstName} onChange={(event)=>{setFirstName(event.target.value.trim())}}/>\r\n       {error.firstName  && <p style={{fontSize:'10px',color:'coral',margin:'0'}}>{error.firstName}</p>}\r\n      <br/>\r\n      <input className='neutral-input' style={{background:'inherit'}} type='text' placeholder='Last Name' value={lastName} onChange={(event)=>{setLastName(event.target.value.trim())}} />     \r\n      {error.lastName  && <p style={{fontSize:'10px',color:'coral',margin:'0'}}>{error.lastName}</p>} \r\n      <br/>\r\n      <input className='neutral-input' style={{background:'inherit'}} type='text' placeholder='Email (any random email)' value={email} onChange={(event)=>{setEmail(event.target.value.trim())}}/>\r\n      {error.email  && <p style={{fontSize:'10px',color:'coral',margin:'0'}}>{error.email}</p>}\r\n      <br/>\r\n      <input className='neutral-input' style={{background:'inherit'}} type='text' placeholder='Phone (Optional or some 10 digits)' value={phone} onChange={(event)=>{setPhone(event.target.value.trim())}}/>\r\n      {error.phone  && <p style={{fontSize:'10px',color:'coral',margin:'0'}}>{error.phone}</p>}\r\n      <br/>\r\n      <input className='neutral-input' style={{background:'inherit'}} type='password' placeholder='Password (min 4 characters)' value={password1} onChange={(event)=>{setPassword1(event.target.value.trim())}}/>\r\n      {error.password1  && <p style={{fontSize:'10px',color:'coral',margin:'0'}}>{error.password1}</p>}\r\n      <br/>\r\n      <input className='neutral-input' style={{background:'inherit'}} type='password' placeholder='Renter-password' value={password2} onChange={(event)=>{setPassword2(event.target.value.trim())}}/>\r\n      {error.password2  && <p style={{fontSize:'10px',color:'coral',margin:'0'}}>{error.password2}</p>}\r\n      <br/>\r\n      <br/>\r\n       <input type='submit' value='Sign Up'/>&nbsp;&nbsp;&nbsp;&nbsp;\r\n      <p style={{ display:'inline',cursor:'pointer',textDecoration:'underline',color:'voilet'}} onClick={()=>{props.setIsSignUp(false)}}>SignIn</p>\r\n      </form>\r\n      {!formValidationMessage.includes('Success') && <p style={{color:'coral'}}>{formValidationMessage}</p>}\r\n      <br/>\r\n      {props.loading  ? <Spinner/> : props.isResponseFromServer  && ( props.error ?  <p style={{color:'coral'}}>{props.error}</p> : <p style={{color:'green'}}>You are Signed Up!!</p>)}\r\n      <br/>\r\n      </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = function(state){\r\n\r\n  return{\r\n       error:state.auth.signUpError,\r\n       loading:state.auth.loading,\r\n       isResponseFromServer:state.auth.isResponseFromServer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = function(dispatch){\r\n\r\n  return{\r\n       signUp:(userData) => {dispatch(signUp(userData))}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","E:\\ReactJS_Projects\\burger-builder2\\src\\Components\\User\\login-signup-form\\signin.js",["250","251","252"],"import React,{useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../../store/actions/auth'\r\nimport {loadUserAsync} from '../../../store/actions/user'\r\nimport Spinner from  '../../UI/spinner/spinner'\r\n\r\n\r\n\r\n\r\n\r\n const  SignIn = function(props) {\r\n \r\n  const firstRenderEmail = React.useRef(true)\r\n  const [email,setEmail] = React.useState('')\r\n  const [password,setPassword] = React.useState('')\r\n  const [error,setError] = React.useState({})\r\n\r\n  const rules ={\r\n    email:{\r\n      type:'email',\r\n      required:true\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(firstRenderEmail.current){\r\n      firstRenderEmail.current=false\r\n      return\r\n    }\r\n      if((rules.email.required && email === '')){\r\n        setError({...error,email:'Email cannot be Empty'})\r\n      }\r\n      else if (rules.email.type=== 'email' &&  !(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email))){\r\n        setError({...error,email:'Email is Not Valid'})\r\n      }\r\n      else {\r\n        setError({...error,email:null})\r\n      }\r\n\r\n  },[email])\r\n\r\n\r\n  const submitHandler = function(event){\r\n    event.preventDefault()\r\n    props.authHandler(email,password)\r\n    setTimeout(()=>{\r\n      props.onClose()\r\n    },4000)\r\n   // props.loadUser(email)\r\n  }\r\n\r\n  let message\r\n  return(\r\n    <div style={{width:'200px',borderRadius:'3px', padding:'10px',margin:'0 60px'}}>\r\n    <div style={{margin:'auto', width:'max-content'}}>\r\n    <h2 style={{textAlign:'center'}}>SignIn</h2>\r\n    <form onSubmit={submitHandler}>\r\n    <input className='neutral-input' style={{background:'inherit'}} type='text' value={email} onChange={(event) => setEmail(event.target.value.trim())} placeholder='email'/>\r\n    {error.email && <p style={{fontSize:'10px',color:'coral',margin:'1px'}}>{error.email}</p>}\r\n    <br/>\r\n    <input className='neutral-input' style={{background:'inherit'}} type='password' value={password} onChange={(event) => setPassword(event.target.value.trim())} placeholder='password'/>      \r\n    <br/>\r\n    <br/>\r\n    <input type='submit' value={'SignIn'}/>&nbsp;&nbsp;&nbsp;&nbsp;\r\n    <p style={{ display:'inline',cursor:'pointer',textDecoration:'underline',color:'voilet'}} onClick={()=>{props.setIsSignUp(true)}}>SignUp</p>\r\n    </form>\r\n    </div>\r\n    <p style={{fontSize:'14px',color:'coral'}}>{props.error}</p>\r\n    <br/>\r\n    {props.loading && <Spinner/>}\r\n    <br/>\r\n    {props.isAuthenticated && <p style={{color:'green'}}>You are Signed In!!</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStatetoProps = function(state){\r\n  return{\r\n    error:state.auth.signInError,\r\n    loading:state.auth.loading,\r\n    isAuthenticated:state.auth.isAuthenticated\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = function(dispatch){\r\n\r\n  return{\r\n   authHandler:(email,password)=>{dispatch(signIn(email,password))},\r\n   loadUser:(email) => {dispatch(loadUserAsync(email))}\r\n  }\r\n}\r\n\r\nexport default connect(mapStatetoProps,mapDispatchToProps)(SignIn)\r\n\r\n\r\n","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\rootReducer.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\cart.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducer.js",[],["253","254"],"E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\burger.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actions\\prices.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actions\\burger.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\prices.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\ingredients.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\error.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actions\\ingredients.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\store\\store.js",["255"],"\r\n\r\nimport {createStore,applyMiddleware,compose, combineReducers} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store= createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport default store","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actions\\cart.js",["256"],"import * as actionTypes from '../actionTypes'\r\nimport axiosInstance from '../../axios-orders'\r\n\r\n\r\n\r\nexport const loadCart = function(cart){ \r\n    return {    \r\n        type:actionTypes.LOAD_CART,\r\n        cart:cart\r\n    }\r\n}\r\n\r\n\r\nexport const addCartAsync = function(userid){\r\n\r\n    return (dispatch,getState) =>{\r\n        const state = getState()\r\n        dispatch(setCartLoading)\r\n        const cart ={\r\n            id:userid,\r\n            userid:userid,\r\n            burgers:[],\r\n            cartTotal:0\r\n        }\r\n        axiosInstance.post('/cart',cart)\r\n        .then(response => dispatch(loadCartAsync(cart.userid)))\r\n        .catch(error => dispatch(setCartServerResponseMessage('add cart failed')))\r\n    }\r\n}\r\n\r\nexport const loadCartAsync = function(userid){\r\n    return (dispatch) =>{\r\n         dispatch(setCartLoading())\r\n         axiosInstance.get('./cart/'+userid)\r\n        .then(response => {\r\n        dispatch(loadCart( response.data))\r\n    })\r\n        .catch(error => dispatch(setCartServerResponseMessage(error.message)))\r\n    }\r\n}\r\n\r\nexport const setCartLoading= function(){\r\n\r\n    return {\r\n        type:'SET_CART_LOADING'\r\n    }\r\n\r\n}\r\n\r\nexport const updateCartAsync = function(cart){\r\n\r\n    return (dispatch) =>{\r\n        dispatch(setCartLoading())\r\n        axiosInstance.put('/cart/'+cart.id,cart)\r\n        .then(response => {dispatch(loadCartAsync(cart.userid))\r\n            dispatch(setCartServerResponseMessage('success'))\r\n        })\r\n        .catch(error => dispatch(setCartServerResponseMessage('update cart failed')))\r\n    }\r\n}\r\n\r\n\r\nexport const addToCartAsync = function(burger){\r\n\r\n    return (dispatch) =>{\r\n    dispatch(setCartLoading())\r\n    axiosInstance.post('/cart.json',burger)\r\n    .then(response => {\r\n        dispatch(addToCart(burger))\r\n        dispatch(setCartServerResponseMessage('success'))\r\n    })\r\n    .catch(error => dispatch(setCartServerResponseMessage('add to cart failed')))\r\n    }\r\n}\r\n\r\nexport const addToCart = function(burger){\r\n\r\n    return {\r\n    type:actionTypes.ADD_TO_CART,\r\n    burger:burger\r\n    }\r\n}\r\n\r\nexport const removeFromCart = function(id){\r\n\r\n    return {\r\n        type:actionTypes.REMOVE_FROM_CART,\r\n        id:id\r\n    }\r\n}\r\n\r\nexport const removeFromCartAsync = function(burger){\r\n\r\n    return (dispatch)=>{\r\n        dispatch(setCartLoading())\r\n        axiosInstance.delete('/cart.json',burger)\r\n        .then((response) => {\r\n            dispatch(removeFromCart(burger.id))\r\n            dispatch(setCartServerResponseMessage('success'))\r\n        })\r\n        .catch(error => dispatch(setCartServerResponseMessage('remove from cart failed')))\r\n    }\r\n}\r\n\r\nexport const setCartServerResponseMessage = function(message){\r\n\r\n    return{\r\n        type:actionTypes.SET_CART_SERVER_RESPONSE_MESSAGE,\r\n        message:message\r\n    }\r\n}","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actions\\auth.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\auth.js",[],"E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\test.js",["257"],"\r\n\r\nconst initialtestData = {\r\n    data1:[1,2,3,4,5,6],\r\n    total:0,\r\n    data2:'data2',\r\n    data3:'data3'\r\n}\r\n\r\nconst testReducer = function(testData=initialtestData,action){\r\n\r\n\r\n    switch(action.type){\r\n\r\n        case 'LOAD': \r\n            return {\r\n                ...testData,\r\n                total: (function(){\r\n                    return testData.data1.reduce((total,current)=>{\r\n                       return total+=current\r\n                    },0)\r\n                })()\r\n            }\r\n\r\n        case 'SET_DATA1':\r\n           // console.log(testData.data1)\r\n            return{\r\n                ...testData,\r\n                data1:action.value\r\n            }\r\n\r\n         case 'SET_DATA1':\r\n               // console.log(testData.data1)\r\n                return{\r\n                    ...testData,\r\n                    data1:action.value\r\n            }\r\n\r\n        case 'SET_DATA2':\r\n              //  console.log(testData.data2)\r\n                return{\r\n                    ...testData,\r\n                    data2:action.value\r\n                }\r\n\r\n         case 'SET_DATA3':\r\n               //  console.log(testData.data3)\r\n                return{\r\n                    ...testData,\r\n                    data3:action.value\r\n                }\r\n        \r\n        default:\r\n       // console.log(testData.total)    \r\n        return testData\r\n    }\r\n\r\n}\r\n\r\nexport default testReducer","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\actions\\user.js",["258"],"import * as actionTypes from '../actionTypes'\r\nimport axiosInstance from '../../axios-orders'\r\nimport {addCartAsync, loadCartAsync} from './cart'\r\n\r\n\r\n\r\n\r\nexport const setUserLoading=function(){\r\n    return{\r\n        type:actionTypes.SET_USER_LOADING\r\n    }\r\n}\r\n\r\nexport const loadUser = function(userData){\r\n\r\n    return {\r\n        type:actionTypes.LOAD_USER,\r\n        user:userData\r\n    }\r\n}\r\n\r\nexport const loadUserAsync = function(email){\r\n\r\n    return (dispatch)=>{\r\n        dispatch(setUserLoading())\r\n        axiosInstance.get('/users/'+email)\r\n        .then(response =>{ \r\n        dispatch(loadUser(response.data))\r\n        dispatch(loadCartAsync(response.data.id))\r\n        })\r\n        .catch(error => dispatch(setUserServerResponse(error)))\r\n    }\r\n}\r\n\r\nexport const updateUser =function(userData){\r\n \r\n    return {\r\n        type:actionTypes.UPDATE_USER,\r\n        user:userData\r\n    }  \r\n}\r\n\r\nexport const updateUserAsync = function(userData){\r\n\r\n    return (dispatch) =>{\r\n        console.log(userData)\r\n        dispatch(setUserLoading())\r\n        axiosInstance.put('/users/'+userData.id,userData)\r\n        .then(res => dispatch(updateUser(userData)))\r\n        .catch(err => dispatch(setUserServerResponse('Update Failed')))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const setUserServerResponse = function(error){\r\n\r\n    return {\r\n        type:actionTypes.SET_USER_SERVER_RESPONSE,\r\n        message:error\r\n    }\r\n}","E:\\ReactJS_Projects\\burger-builder2\\src\\store\\reducers\\user.js",["259"],"import * as actionTypes from '../actionTypes'\r\n\r\nconst initialUser={\r\n    id:null,\r\n    firstName:null,\r\n    lastName:null,\r\n    phone:null,\r\n    email:null,\r\n    addresses:[],\r\n    loading:false,\r\n    userServerResponse:null\r\n}\r\n\r\nconst userReducer = function(user=initialUser,action){\r\n\r\n\r\n    switch(action.type){\r\n\r\n        case actionTypes.SET_USER_LOADING:\r\n            return{\r\n                ...user,\r\n                addresses:function(){\r\n                let addresses1 =[]\r\n                for(let key of user.addresses){\r\n                    let address = {...user.addresses[key]}\r\n                    addresses1=[...addresses1,address]\r\n                }\r\n                return addresses1    \r\n                }(),\r\n                loading:true,\r\n                userServerResponse:null\r\n            }\r\n\r\n        \r\n        case actionTypes.LOAD_USER:\r\n            return{\r\n                ...user,\r\n                addresses:function(){\r\n                    let addresses1 =[]\r\n                    for(let key of user.addresses){\r\n                        let address = {...user.addresses[key]}\r\n                        addresses1=[...addresses1,address]\r\n                    }\r\n                    return addresses1    \r\n                    }(),\r\n                ...action.user,\r\n                loading:false,\r\n                userServerResponse:null\r\n            }\r\n\r\n        case actionTypes.UPDATE_USER:\r\n            return{\r\n                ...user,\r\n                addresses:function(){\r\n                    let addresses1 =[]\r\n                    for(let key of user.addresses){\r\n                        let address = {...user.addresses[key]}\r\n                        addresses1=[...addresses1,address]\r\n                    }\r\n                    return addresses1    \r\n                    }(),\r\n                ...action.user,\r\n                loading:false,\r\n                userServerResponse:null\r\n            }\r\n\r\n        case actionTypes.ADD_ADDRESS:\r\n            return{\r\n                ...user,\r\n                addresses:function(){\r\n                    let addresses1 =[]\r\n                    for(let key of user.addresses){\r\n                        let address = {...user.addresses[key]}\r\n                        addresses1=[...addresses1,address]\r\n                    }\r\n                    return addresses1.push(action.address)    \r\n                    }(),\r\n                loading:false,\r\n                userServerResponse:null\r\n            }\r\n\r\n        case actionTypes.UPDATE_ADDRESS:\r\n            return{\r\n                ...user,\r\n                addresses:function(){\r\n                  const  newAddress= user.address.find(address => address.name === action.address.name)\r\n                         for(let key in action.address){\r\n                             newAddress[key] = action.address[key]\r\n                         }\r\n                    return [...user.addresses]\r\n                }(),\r\n                loading:false,\r\n                userServerResponse:null\r\n            }\r\n\r\n        case actionTypes.REMOVE_ADDRESS:\r\n            return{\r\n                ...user,\r\n                addresses:function(){\r\n                    let addresses1 =[]\r\n                    for(let key of user.addresses.filter(address => address.name != action.name)){\r\n                        let address = {...user.addresses[key]}\r\n                        addresses1=[...addresses1,address]\r\n                    }\r\n                    return addresses1    \r\n                    }(),\r\n                loading:false,\r\n                userServerResponse:null\r\n            }\r\n\r\n\r\n        case actionTypes.SET_USER_SERVER_RESPONSE:\r\n            return {\r\n                ...user,\r\n                addresses:function(){\r\n                    let addresses1 =[]\r\n                    for(let key of user.addresses){\r\n                        let address = {...user.addresses[key]}\r\n                        addresses1=[...addresses1,address]\r\n                    }\r\n                    return addresses1    \r\n                    }(),\r\n                loading:false,\r\n                userServerResponse:action.message\r\n            }\r\n\r\n        case actionTypes.CLEAR_USER:\r\n               return initialUser\r\n      \r\n\r\n        default : return user\r\n    }\r\n}\r\n\r\nexport default userReducer",{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":18},{"ruleId":"268","severity":1,"message":"269","line":20,"column":31,"nodeType":"270","messageId":"271","endLine":20,"endColumn":33},{"ruleId":"260","replacedBy":"272"},{"ruleId":"262","replacedBy":"273"},{"ruleId":"264","severity":1,"message":"274","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":14},{"ruleId":"264","severity":1,"message":"274","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":14},{"ruleId":"264","severity":1,"message":"275","line":5,"column":8,"nodeType":"266","messageId":"267","endLine":5,"endColumn":24},{"ruleId":"264","severity":1,"message":"276","line":12,"column":21,"nodeType":"266","messageId":"267","endLine":12,"endColumn":31},{"ruleId":"264","severity":1,"message":"277","line":14,"column":9,"nodeType":"266","messageId":"267","endLine":14,"endColumn":23},{"ruleId":"264","severity":1,"message":"278","line":21,"column":7,"nodeType":"266","messageId":"267","endLine":21,"endColumn":17},{"ruleId":"264","severity":1,"message":"279","line":25,"column":18,"nodeType":"266","messageId":"267","endLine":25,"endColumn":28},{"ruleId":"264","severity":1,"message":"280","line":26,"column":10,"nodeType":"266","messageId":"267","endLine":26,"endColumn":21},{"ruleId":"264","severity":1,"message":"281","line":26,"column":22,"nodeType":"266","messageId":"267","endLine":26,"endColumn":36},{"ruleId":"264","severity":1,"message":"282","line":27,"column":10,"nodeType":"266","messageId":"267","endLine":27,"endColumn":16},{"ruleId":"264","severity":1,"message":"283","line":27,"column":17,"nodeType":"266","messageId":"267","endLine":27,"endColumn":26},{"ruleId":"264","severity":1,"message":"284","line":28,"column":10,"nodeType":"266","messageId":"267","endLine":28,"endColumn":18},{"ruleId":"264","severity":1,"message":"285","line":28,"column":19,"nodeType":"266","messageId":"267","endLine":28,"endColumn":30},{"ruleId":"286","severity":1,"message":"287","line":32,"column":45,"nodeType":"288","endLine":32,"endColumn":47,"suggestions":"289"},{"ruleId":"260","replacedBy":"290"},{"ruleId":"262","replacedBy":"291"},{"ruleId":"264","severity":1,"message":"292","line":6,"column":10,"nodeType":"266","messageId":"267","endLine":6,"endColumn":16},{"ruleId":"264","severity":1,"message":"293","line":10,"column":8,"nodeType":"266","messageId":"267","endLine":10,"endColumn":13},{"ruleId":"264","severity":1,"message":"274","line":1,"column":10,"nodeType":"266","messageId":"267","endLine":1,"endColumn":16},{"ruleId":"260","replacedBy":"294"},{"ruleId":"262","replacedBy":"295"},{"ruleId":"264","severity":1,"message":"274","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":14},{"ruleId":"286","severity":1,"message":"296","line":56,"column":7,"nodeType":"288","endLine":56,"endColumn":18,"suggestions":"297"},{"ruleId":"286","severity":1,"message":"298","line":65,"column":7,"nodeType":"288","endLine":65,"endColumn":17,"suggestions":"299"},{"ruleId":"286","severity":1,"message":"300","line":74,"column":7,"nodeType":"288","endLine":74,"endColumn":14,"suggestions":"301"},{"ruleId":"286","severity":1,"message":"302","line":83,"column":7,"nodeType":"288","endLine":83,"endColumn":14,"suggestions":"303"},{"ruleId":"286","severity":1,"message":"304","line":58,"column":9,"nodeType":"288","endLine":58,"endColumn":22,"suggestions":"305"},{"ruleId":"286","severity":1,"message":"306","line":68,"column":9,"nodeType":"288","endLine":68,"endColumn":16,"suggestions":"307"},{"ruleId":"286","severity":1,"message":"308","line":78,"column":9,"nodeType":"288","endLine":78,"endColumn":16,"suggestions":"309"},{"ruleId":"286","severity":1,"message":"310","line":88,"column":9,"nodeType":"288","endLine":88,"endColumn":16,"suggestions":"311"},{"ruleId":"286","severity":1,"message":"312","line":99,"column":9,"nodeType":"288","endLine":99,"endColumn":18,"suggestions":"313"},{"ruleId":"286","severity":1,"message":"314","line":74,"column":3,"nodeType":"288","endLine":74,"endColumn":14,"suggestions":"315"},{"ruleId":"286","severity":1,"message":"316","line":89,"column":3,"nodeType":"288","endLine":89,"endColumn":13,"suggestions":"317"},{"ruleId":"286","severity":1,"message":"318","line":104,"column":3,"nodeType":"288","endLine":104,"endColumn":10,"suggestions":"319"},{"ruleId":"268","severity":1,"message":"269","line":114,"column":26,"nodeType":"270","messageId":"271","endLine":114,"endColumn":28},{"ruleId":"286","severity":1,"message":"320","line":120,"column":3,"nodeType":"288","endLine":120,"endColumn":10,"suggestions":"321"},{"ruleId":"286","severity":1,"message":"322","line":132,"column":3,"nodeType":"288","endLine":132,"endColumn":14,"suggestions":"323"},{"ruleId":"286","severity":1,"message":"324","line":144,"column":3,"nodeType":"288","endLine":144,"endColumn":14,"suggestions":"325"},{"ruleId":"264","severity":1,"message":"274","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":14},{"ruleId":"286","severity":1,"message":"318","line":41,"column":5,"nodeType":"288","endLine":41,"endColumn":12,"suggestions":"326"},{"ruleId":"264","severity":1,"message":"327","line":53,"column":7,"nodeType":"266","messageId":"267","endLine":53,"endColumn":14},{"ruleId":"260","replacedBy":"328"},{"ruleId":"262","replacedBy":"329"},{"ruleId":"264","severity":1,"message":"330","line":3,"column":46,"nodeType":"266","messageId":"267","endLine":3,"endColumn":61},{"ruleId":"264","severity":1,"message":"331","line":17,"column":15,"nodeType":"266","messageId":"267","endLine":17,"endColumn":20},{"ruleId":"332","severity":1,"message":"333","line":32,"column":10,"nodeType":"334","messageId":"271","endLine":37,"endColumn":14},{"ruleId":"264","severity":1,"message":"335","line":3,"column":9,"nodeType":"266","messageId":"267","endLine":3,"endColumn":21},{"ruleId":"268","severity":1,"message":"269","line":101,"column":82,"nodeType":"270","messageId":"271","endLine":101,"endColumn":84},"no-native-reassign",["336"],"no-negated-in-lhs",["337"],"no-unused-vars","'Component2' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["336"],["337"],"'Button' is defined but never used.","'BurgerIngredient' is defined but never used.","'initPrices' is defined but never used.","'addToCartAsync' is defined but never used.","'MAX_LAYERS' is assigned a value but never used.","'setDisable' is assigned a value but never used.","'showSpinner' is assigned a value but never used.","'setShowSpinner' is assigned a value but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'quantity' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["338"],["336"],["337"],"'render' is defined but never used.","'axios' is defined but never used.",["336"],["337"],"React Hook useEffect has a missing dependency: 'formData.firstName'. Either include it or remove the dependency array.",["339"],"React Hook useEffect has a missing dependency: 'formData.lastName'. Either include it or remove the dependency array.",["340"],"React Hook useEffect has a missing dependency: 'formData.phone'. Either include it or remove the dependency array.",["341"],"React Hook useEffect has a missing dependency: 'formData.email'. Either include it or remove the dependency array.",["342"],"React Hook useEffect has missing dependencies: 'error', 'rules.addressName.length1', and 'rules.addressName.required'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["343"],"React Hook useEffect has missing dependencies: 'error', 'rules.line1.length1', and 'rules.line1.required'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["344"],"React Hook useEffect has missing dependencies: 'error', 'rules.line2.length1', and 'rules.line2.required'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["345"],"React Hook useEffect has missing dependencies: 'error', 'rules.line3.length1', and 'rules.line3.required'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["346"],"React Hook useEffect has missing dependencies: 'error', 'rules.zipCode.length', 'rules.zipCode.required', and 'rules.zipCode.type'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["347"],"React Hook useEffect has missing dependencies: 'error', 'rules.firstName.required', and 'rules.firstName.type'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["348"],"React Hook useEffect has missing dependencies: 'error', 'rules.lastName.required', and 'rules.lastName.type'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["349"],"React Hook useEffect has missing dependencies: 'error', 'rules.email.required', and 'rules.email.type'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["350"],"React Hook useEffect has missing dependencies: 'error', 'rules.phone.length1', 'rules.phone.required', and 'rules.phone.type'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["351"],"React Hook useEffect has missing dependencies: 'error' and 'rules.password1.minLength'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["352"],"React Hook useEffect has missing dependencies: 'error' and 'password1'. Either include them or remove the dependency array. You can also do a functional update 'setError(e => ...)' if you only need 'error' in the 'setError' call.",["353"],["354"],"'message' is defined but never used.",["336"],["337"],"'combineReducers' is defined but never used.","'state' is assigned a value but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","'addCartAsync' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"379","fix":"387"},"Update the dependencies array to be: [props]",{"range":"388","text":"389"},"Update the dependencies array to be: [firstName, formData.firstName]",{"range":"390","text":"391"},"Update the dependencies array to be: [formData.lastName, lastName]",{"range":"392","text":"393"},"Update the dependencies array to be: [formData.phone, phone]",{"range":"394","text":"395"},"Update the dependencies array to be: [email, formData.email]",{"range":"396","text":"397"},"Update the dependencies array to be: [addressName, error, rules.addressName.length1, rules.addressName.required]",{"range":"398","text":"399"},"Update the dependencies array to be: [error, line1, rules.line1.length1, rules.line1.required]",{"range":"400","text":"401"},"Update the dependencies array to be: [error, line2, rules.line2.length1, rules.line2.required]",{"range":"402","text":"403"},"Update the dependencies array to be: [error, line3, rules.line3.length1, rules.line3.required]",{"range":"404","text":"405"},"Update the dependencies array to be: [error, rules.zipCode.length, rules.zipCode.required, rules.zipCode.type, zipCode]",{"range":"406","text":"407"},"Update the dependencies array to be: [error, firstName, rules.firstName.required, rules.firstName.type]",{"range":"408","text":"409"},"Update the dependencies array to be: [error, lastName, rules.lastName.required, rules.lastName.type]",{"range":"410","text":"411"},"Update the dependencies array to be: [email, error, rules.email.required, rules.email.type]",{"range":"412","text":"413"},"Update the dependencies array to be: [error, phone, rules.phone.length1, rules.phone.required, rules.phone.type]",{"range":"414","text":"415"},"Update the dependencies array to be: [error, password1, rules.password1.minLength]",{"range":"416","text":"417"},"Update the dependencies array to be: [error, password1, password2]",{"range":"418","text":"419"},{"range":"420","text":"413"},[1130,1132],"[props]",[2039,2050],"[firstName, formData.firstName]",[2441,2451],"[formData.lastName, lastName]",[2856,2863],"[formData.phone, phone]",[3250,3257],"[email, formData.email]",[2147,2160],"[addressName, error, rules.addressName.length1, rules.addressName.required]",[2593,2600],"[error, line1, rules.line1.length1, rules.line1.required]",[3028,3035],"[error, line2, rules.line2.length1, rules.line2.required]",[3471,3478],"[error, line3, rules.line3.length1, rules.line3.required]",[4084,4093],"[error, rules.zipCode.length, rules.zipCode.required, rules.zipCode.type, zipCode]",[1941,1952],"[error, firstName, rules.firstName.required, rules.firstName.type]",[2397,2407],"[error, lastName, rules.lastName.required, rules.lastName.type]",[2841,2848],"[email, error, rules.email.required, rules.email.type]",[3313,3320],"[error, phone, rules.phone.length1, rules.phone.required, rules.phone.type]",[3640,3651],"[error, password1, rules.password1.minLength]",[3934,3945],"[error, password1, password2]",[1122,1129]]